/*Estilização Das Logos*/
body{
    overflow-x: hidden;
}
.NavBar .container .logos{
    background-color: var(--color-primary);
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem;

}
.Logo3e{
    width: 7vw;
    margin: 0 15rem;
    
}
.EcoenelLogo{
    width: 20vw;
    margin: 0 10rem;
}

/*Botões para navegação*/
.buttons{
    display: flex;
    justify-content: center;
    align-items: center;
}

.MobileBtn{
    display: none;
}

$items: 4;
$transition-duration: 0.5s;
$transition-delay: 0.05s;

/* Toggle Functionality */

#toggle {
  display: none; //hides the checkbox
}


// Styles for the 'open' state, if the checkbox is checked
#toggle:checked {
  //Any element you need to change the style if menu is open goes here, using the sibling selector (~)
  & ~ .toggle-container .button-toggle {
    box-shadow: 0 0 0 100vw rgba(0, 0, 0, 0.288), inset 0 0 0 100vh rgba(0, 0, 0, 0.288);

    &:before {
      transform: translateY(-50%) rotate(45deg) scale(1);
    }

    &:after {
      transform: translateY(-50%) rotate(-45deg) scale(1);
    }
  }

  // Open Nav
  & ~ .nav {
    margin-bottom: 100px;
    pointer-events: auto;
    transform: translate(50px, 50px); /*Conteudo*/

    // Restoring nav items from 'lines' in the menu icon
    .nav-item {
      color: #ffffff;
      letter-spacing: 0;
      height: 40px;
      line-height: 40px;
      margin-top: 0;
      opacity: 1;
      transform: scaleY(1);
      transition: $transition-duration, opacity 0.1s;


      // Setting delays for the nav items in open transition
      @for $i from 1 through $items {
        &:nth-child(#{$i}) {
          $delay: ($items - $i) * $transition-delay;
          transition-delay: $delay;
          &:before {
            transition-delay: $delay;
          }
        }
      }

      // Hide the lines
      &:before {
        opacity: 0;
      }
    }
  }

  & ~ .dummy-content {
    padding-top: 30px;

    &:before {
      background-color: rgba(0, 0, 0, 0.3);
    }
  }
}

/* Toggle Button */

.button-toggle {
  position: absolute;
  display: inline-block;
  width: 30px;
  height: 30px;
  margin: 25px;
  background-color: transparent;
  border: none;
  cursor: pointer;
  border-radius: 100%;
  transition: $transition-duration + 0.1;

  // Shadow on Hover
  &:hover {
   box-shadow: 0 0 0 8px rgba(0, 0, 0, 0.1), inset 0 0 0 20px rgba(0, 0, 0, 0.1);
  }

  // Making the 'X' icon using `:before` and `:after` pseudo-elements
  // Initially hidden beause of `scale(0)` transformation

  &:before, &:after {
    position: absolute;
    content: '';
    top: 50%;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: #ffffff;
    border-radius: 5px;
    transition: $transition-duration;
  }

  &:before {
    transform: translateY(-50%) rotate(45deg) scale(0);
  }

  &:after {
    transform: translateY(50%) rotate(-45deg) scale(0);
  }
}

/* Menu */

.nav {
  display: inline-block;
  margin: 25px 25px 20px;
  pointer-events: none;
  transition: $transition-duration;
}

// Showing nav items as lines, making up the hamburger menu icon
.nav-item {
  position: relative;
  display: flex;
  float: left;
  clear: both;
  color: transparent;
  font-size: 17px;
  letter-spacing: -6.2px;
  height: 10px;
  line-height: 10px;
  text-transform: uppercase;
  white-space: nowrap;
  transform: scaleY(0.2);
  transition: $transition-duration, opacity 1s;

  //Set delays for the nav items in close transition
  @for $i from 1 through $items {
    &:nth-child(#{$i}) {
      $delay: ($i - 1) * $transition-delay;
      transition-delay: $delay;
      &:before {
        transition-delay: $delay;
      }
    }
  }

  // Adjusting width for first line
  &:nth-child(1) {
    width: 30px;
  }

  // Adjusting width for second line
  
  &:nth-child(2) {
    width: 30px;
  }
  
  &:nth-child(3) {
    width: 30px;
  }

  // Adjusting the fourth element onwards
  &:nth-child(n + 4) {
    letter-spacing: -8px;
    margin-top: -7px;
    opacity: 0;
  }

  //getting lines for the hamburger menu icon
  &:before {
    position: absolute;
    content: '';
    top: 50%;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: #ffffff;
    transform: translateY(-50%) scaleY(5);
    transition: $transition-duration;
  }
}

/* Dummy Content */

.dummy-content {
  position: relative;
  text-align: center;
  transition: $transition-duration;

  &:before {
    position: absolute;
    content: '';
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: transparent;
    z-index: 1000;
    transition: $transition-duration;
  }
}

.circle {
  display: inline-block;
  width: 75px;
  height: 75px;
  background-color: #ffffff;
  border-radius: 100%;
}

.text {
  margin: 15px 0 30px;

  span {
    display: inline-block;
    height: 10px;
    margin: 0 5px;
    background-color: #ffffff;
    border-radius: 5px;

    &:first-child {
      width: 50px;
    }

    &:last-child {
      width: 80px;
    }
  }
}

.square-top {
  display: inline-block;
  position: relative;
  width: 200px;
  height: 300px;
  background-color: #ffffff;
  z-index: 1;
}

.square-behind {
  display: inline-block;
  position: relative;
  top: -256px;
  width: 250px;
  height: 210px;
  color: #ffffff;
  background-color: #ffffff;

  &:before, &:after {
    position: absolute;
    content: '';
    top: 0;
    width: 40%;
    height: 100%;
  }

  &:before {
    left: 0;
    background-color: #ffffff;
  }

  &:after {
    right: 0;
    background-color: #ffffff;
}
}



/*Residometro && Atualização*/
.section1 .container{
    display: flex;
    padding: 15rem 0 0 0;
    justify-content: center;
    align-items: center;
    text-align: center;

}
.BlobOrange{
    left: 0;
    width: 15vw;
    position: absolute;
    z-index: -1000;
    margin: -2rem 25rem;

}

.BlobYellow{
    right: 0;
    width: 17vw;
    margin: -2rem 23rem;
    position: absolute;
    z-index: -1000;
}

.Residometro{
    margin: -10vh 0;
    font-size: 2rem;
    
}

.wave{
    display: block;
    left: 0;
    top: 0;
    width: 32.9vw;
}


#Size{
    width: 10rem;
    cursor: pointer;
    z-index: 2000;
    position: absolute;
    animation: rotate 15s linear infinite;
}
.Blob1{
    margin: -20vh 0vw;
    left: 0%;
}
.Blob2{
    margin: 5vh 15vw;
    left: 0%;
   
}

.Blob3{
    margin: 35vh 0vw;

    left: 0%;
   
}

.Blob4{
    margin: 35vh 30vw;

    width: 13rem;
    left: 0%;
   
}
.Blob5{
    margin: 35vh 30vw;

    width: 13rem;
    right: 0%;

}
.Blob6{
    margin: 35vh 0vw;

    width: 13rem;
    right: 0%;

}

.Blob7{
    margin: 5vh 15vw;

    width: 13rem;
    right: 0%;

}

.Blob8{
    margin: -20vh 0vw;

    width: 10rem;
    right: 0%;

}

.Blob9{
    margin: -23vh -15vw;

    width: 10rem;

}
.Blob10{
    margin: -23vh 15vw;

    width: 10rem;
}
/* Aqui definimos a nossa animação com o nome "rotate" */
@keyframes rotate {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(359deg);
    }
}

.sec-tabela{
    display: flex;
    margin-top: 5vh;
}
.sec-tabela .container{
    align-items: center;
    margin: 0 auto;
}
.start{
    display: flex;
    margin-top: 10vh;
    color: var(--color-primary);
    font-size: 1.5rem;
    text-align: center;
    margin: 1rem 2rem ;
    
}
table{
    margin: 0 0 4rem;  
    text-align: center;
    border-spacing: 0px;
    border: 0;
    font-size: 0.9rem;
    width: 60%;
    table-layout:fixed;
}
td{
    padding: 0.6rem;
    word-wrap:break-word;

}
  th{
    padding: 0.6rem;

    border: 0;
    background-color: var(--color-primary);
    color: black;
    font-weight: 300;
    margin: 0 -3rem;
    
  }
.title{
    display: flex;
    justify-content: space-between;
    margin: 0 auto;
    text-align: center;
    gap: 8rem;
    width:20rem;

    background-color: var(--color-primary);
    color: white;
}

.vertical {
    border-left: 2px solid var(--color-primary);
    height: 60vh;
    overflow-y: hidden;

}
@media only screen and (max-width: 900px){
    /*Estilização Das Logos*/
    .Logo3e{
        margin: 0 -1vw;
    }
    .EcoenelLogo{
        margin: 0 35vw;
    }
    .MobileBtn{
        background: none;
        display: flex;
        padding: .5rem 1rem;
        font-size: 1rem;
        border: none;
        cursor: pointer;
        top: 2vw;
        position: absolute;
    }
    .buttons{
        visibility: none;

    }
    .NavBar .container .logos{
        justify-content: center;
    }
    .buttons{
        display: block;
        height: 0px;
        visibility: hidden;
        overflow-y: hidden;
    }
    #nav.ShowMenu .buttons{
        display: flex;
        flex-direction: column;
        position: absolute;
        width: 100%;
        top: 60px;
        background: url('/public/assets/BackgroundImg.png');
        height: calc(100vh - 60px);
        z-index: 1000;
        transition: .6s;
        overflow: auto;
        visibility: visible;

    }
    #Hamburger{
        width: 20px;
        border-top: 2px solid;
        color: rgb(255, 255, 255);
        
    }
    #Hamburger::after, #Hamburger::before{
        content: '';
        display: block;
        margin-top: 5px;
        width: 20px;
        height: 2px;
        position: relative;
        transition: .3s;
        background-color: currentColor;
        
    }
    .ShowMenu #Hamburger{
        border-top-color: transparent;
    }
    .ShowMenu #Hamburger::after{
        transform: rotate(-135deg);
        top: -7px;
    }
    .ShowMenu #Hamburger::before{
        transform: rotate(135deg);

    }
}
@media only screen and (max-width: 800px){
    #nav.ShowMenu .buttons{
        top: 10.5vh;

    }
}