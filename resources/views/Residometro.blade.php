@extends('layout.main')

@section('title', 'Ecoenel')


@section('content')
<script src="https://code.highcharts.com/highcharts.js"></script>


<div data-aos="fade-down"
data-aos-easing="linear"
data-aos-duration="1500">
<section class="section1">
<div class="containerResidometro">
    <div class="Residometro">



        <div class="tick" data-value="3111111111" data-did-init="handleTickInit">

            <div data-value-mapping="indexes" data-layout="horizontal fit" data-transform="arrive(.1) -> round -> split -> delay(rtl, 100, 150)">
                
                <span data-view="flip"></span>
                <span class="ponto">.</span>
                <span data-view="flip"></span>
                <span data-view="flip"></span>
                <span data-view="flip"></span>
                <span class="ponto">.</span>
                <span data-view="flip"></span>
                <span data-view="flip"></span>
                <span data-view="flip"></span>
                <span class="ponto">.</span>
                <span data-view="flip"></span>
                <span data-view="flip"></span>
                <span data-view="flip"></span>
                <span class="medida">kg</span>
        
            </div>
        
        </div>


            </span>
            <p>Total de res√≠duos coletados</p>

        </div>
    </div>
    </div>
</div>
</section>


</div>
<div class="ocean">
    <div class="wave"></div>
    <div class="wave"></div>
  </div>

<svg width="100%" height="100%" id="svg" viewBox="0 0 1440 400" xmlns="http://www.w3.org/2000/svg" class="transition duration-300 ease-in-out delay-150"><style>
    #svg{
        position: absolute;
        margin: 20rem 0;
    }

    .path-0{
    animation:pathAnim-0 8s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    }
    @keyframes pathAnim-0{
    0%{
    d: path("M 0,400 C 0,400 0,133 0,133 C 101.98086124401911,115.78468899521532 203.96172248803822,98.56937799043064 304,100 C 404.0382775119618,101.43062200956936 502.13397129186603,121.50717703349281 593,133 C 683.866028708134,144.4928229665072 767.5023923444976,147.4019138755981 852,133 C 936.4976076555024,118.59808612440192 1021.8564593301435,86.88516746411483 1120,84 C 1218.1435406698565,81.11483253588517 1329.0717703349283,107.05741626794259 1440,133 C 1440,133 1440,400 1440,400 Z");
    }
    25%{
    d: path("M 0,400 C 0,400 0,133 0,133 C 87.16746411483254,107.61244019138756 174.33492822966508,82.22488038277513 283,89 C 391.6650717703349,95.77511961722487 521.8277511961721,134.71291866028707 627,147 C 732.1722488038279,159.28708133971293 812.354066985646,144.92344497607658 893,144 C 973.645933014354,143.07655502392342 1054.755980861244,155.59330143540672 1146,156 C 1237.244019138756,156.40669856459328 1338.622009569378,144.70334928229664 1440,133 C 1440,133 1440,400 1440,400 Z");
    }
    50%{
    d: path("M 0,400 C 0,400 0,133 0,133 C 76.14354066985646,157.10526315789474 152.28708133971293,181.21052631578945 263,176 C 373.7129186602871,170.78947368421055 518.9952153110048,136.26315789473685 616,138 C 713.0047846889952,139.73684210526315 761.732057416268,177.73684210526315 832,181 C 902.267942583732,184.26315789473685 994.0765550239234,152.78947368421052 1099,139 C 1203.9234449760766,125.21052631578947 1321.9617224880383,129.10526315789474 1440,133 C 1440,133 1440,400 1440,400 Z");
    }
    75%{
    d: path("M 0,400 C 0,400 0,133 0,133 C 68.76555023923447,109.99521531100478 137.53110047846894,86.99043062200955 238,103 C 338.46889952153106,119.00956937799045 470.6411483253588,174.03349282296654 572,177 C 673.3588516746412,179.96650717703346 743.9043062200958,130.8755980861244 828,118 C 912.0956937799042,105.1244019138756 1009.7416267942583,128.4641148325359 1114,137 C 1218.2583732057417,145.5358851674641 1329.129186602871,139.26794258373207 1440,133 C 1440,133 1440,400 1440,400 Z");
    }
    100%{
    d: path("M 0,400 C 0,400 0,133 0,133 C 101.98086124401911,115.78468899521532 203.96172248803822,98.56937799043064 304,100 C 404.0382775119618,101.43062200956936 502.13397129186603,121.50717703349281 593,133 C 683.866028708134,144.4928229665072 767.5023923444976,147.4019138755981 852,133 C 936.4976076555024,118.59808612440192 1021.8564593301435,86.88516746411483 1120,84 C 1218.1435406698565,81.11483253588517 1329.0717703349283,107.05741626794259 1440,133 C 1440,133 1440,400 1440,400 Z");
    }
    }</style><defs><linearGradient id="gradient" x1="0%" y1="50%" x2="100%" y2="50%"><stop offset="5%" stop-color="#bbcd09"></stop><stop offset="95%" stop-color="#bbcd09"></stop></linearGradient></defs><path d="M 0,400 C 0,400 0,133 0,133 C 101.98086124401911,115.78468899521532 203.96172248803822,98.56937799043064 304,100 C 404.0382775119618,101.43062200956936 502.13397129186603,121.50717703349281 593,133 C 683.866028708134,144.4928229665072 767.5023923444976,147.4019138755981 852,133 C 936.4976076555024,118.59808612440192 1021.8564593301435,86.88516746411483 1120,84 C 1218.1435406698565,81.11483253588517 1329.0717703349283,107.05741626794259 1440,133 C 1440,133 1440,400 1440,400 Z" stroke="none" stroke-width="0" fill="url(#gradient)" fill-opacity="0.53" class="transition-all duration-300 ease-in-out delay-150 path-0"></path><style>
    .path-1{
    animation:pathAnim-1 8s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    }
    @keyframes pathAnim-1{
    0%{
    d: path("M 0,400 C 0,400 0,266 0,266 C 94.5263157894737,281.1578947368421 189.0526315789474,296.3157894736842 287,288 C 384.9473684210526,279.6842105263158 486.31578947368416,247.89473684210526 582,238 C 677.6842105263158,228.10526315789474 767.6842105263157,240.10526315789474 870,259 C 972.3157894736843,277.89473684210526 1086.9473684210527,303.6842105263158 1184,306 C 1281.0526315789473,308.3157894736842 1360.5263157894738,287.1578947368421 1440,266 C 1440,266 1440,400 1440,400 Z");
    }
    25%{
    d: path("M 0,400 C 0,400 0,266 0,266 C 77.31100478468898,254.28708133971293 154.62200956937795,242.57416267942583 247,236 C 339.37799043062205,229.42583732057417 446.82296650717706,227.99043062200957 551,240 C 655.1770334928229,252.00956937799043 756.0861244019139,277.4641148325359 848,275 C 939.9138755980861,272.5358851674641 1022.8325358851675,242.15311004784692 1120,236 C 1217.1674641148325,229.84688995215308 1328.5837320574162,247.92344497607655 1440,266 C 1440,266 1440,400 1440,400 Z");
    }
    50%{
    d: path("M 0,400 C 0,400 0,266 0,266 C 69.866028708134,245.54066985645932 139.732057416268,225.08133971291866 243,235 C 346.267942583732,244.91866028708134 482.9377990430622,285.21531100478467 595,299 C 707.0622009569378,312.78468899521533 794.5167464114832,300.0574162679426 879,285 C 963.4832535885168,269.9425837320574 1044.9952153110048,252.55502392344496 1138,249 C 1231.0047846889952,245.44497607655504 1335.5023923444976,255.7224880382775 1440,266 C 1440,266 1440,400 1440,400 Z");
    }
    75%{
    d: path("M 0,400 C 0,400 0,266 0,266 C 120.60287081339715,265.85645933014354 241.2057416267943,265.7129186602871 330,271 C 418.7942583732057,276.2870813397129 475.77990430622003,287.00478468899524 570,281 C 664.22009569378,274.99521531100476 795.6746411483253,252.2679425837321 892,240 C 988.3253588516747,227.7320574162679 1049.5215311004786,225.92344497607655 1135,232 C 1220.4784688995214,238.07655502392345 1330.2392344497607,252.03827751196172 1440,266 C 1440,266 1440,400 1440,400 Z");
    }
    100%{
    d: path("M 0,400 C 0,400 0,266 0,266 C 94.5263157894737,281.1578947368421 189.0526315789474,296.3157894736842 287,288 C 384.9473684210526,279.6842105263158 486.31578947368416,247.89473684210526 582,238 C 677.6842105263158,228.10526315789474 767.6842105263157,240.10526315789474 870,259 C 972.3157894736843,277.89473684210526 1086.9473684210527,303.6842105263158 1184,306 C 1281.0526315789473,308.3157894736842 1360.5263157894738,287.1578947368421 1440,266 C 1440,266 1440,400 1440,400 Z");
    }
    }


    @media only screen and (max-width: 1900px){
        #svg{
          margin: 13rem 0;
      }
      }
    </style><defs><linearGradient id="gradient" x1="0%" y1="100%" x2="100%" y2="100%"><stop offset="5%" stop-color="#bbcd09"></stop><stop offset="95%" stop-color="#bbcd09"></stop></linearGradient></defs><path d="M 0,400 C 0,400 0,266 0,266 C 94.5263157894737,281.1578947368421 189.0526315789474,296.3157894736842 287,288 C 384.9473684210526,279.6842105263158 486.31578947368416,247.89473684210526 582,238 C 677.6842105263158,228.10526315789474 767.6842105263157,240.10526315789474 870,259 C 972.3157894736843,277.89473684210526 1086.9473684210527,303.6842105263158 1184,306 C 1281.0526315789473,308.3157894736842 1360.5263157894738,287.1578947368421 1440,266 C 1440,266 1440,400 1440,400 Z" stroke="none" stroke-width="0" width="0" fill="url(#gradient)" fill-opacity="1" class="transition-all duration-300 ease-in-out delay-150 path-1"></path></svg>
   

        <script>
          function handleTickInit(tick) {

// update the value every 5 seconds
var interval = Tick.helper.duration(5, 'seconds');

// value to add each interval
var valuePerInterval = 5;

// offset is a fixed date in the past
var dateOffset = Tick.helper.date('2019-01-01');

// value to start with, the value of the counter at the offset date
var valueOffset = 1;

// uncomment lines below (and comment line above) if you want offset be set to the first time the user visited the page
// var offset = parseInt(localStorage.getItem('tick-value-counter-offset') || Date.now(), 10);
// localStorage.setItem('tick-value-counter-offset', offset);

// start updating the counter each second
Tick.helper.interval(function () {

    // current time in milliseconds
    var now = Date.now();

    // difference with offset time in milliseconds
    var diff = now - dateOffset;

    // total time since offset divide by interval gives us the amount of loops since offset
    var loops = diff / interval;

    // this will make sure we only count completed loops.
    loops = Math.floor(loops);

    // multiply that by the value per interval and you have your final value
    tick.value = valueOffset + (loops * valuePerInterval);

}, 9000);
}
        </script>

@endsection()
